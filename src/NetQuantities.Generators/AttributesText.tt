<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;

namespace NetQuantities;


[AttributeUsage(AttributeTargets.Struct, AllowMultiple = false)]
internal sealed class QuantityAttribute : Attribute
{
}

[AttributeUsage(AttributeTargets.Struct, AllowMultiple = true)]
internal sealed class QuantityUnitAttribute : Attribute
{
    public string Name { get; }
    public string Unit { get; }
    public double Scale { get; }
    public UnitPrefix Prefix { get; }
    public int PowerOfPrefix { get; }

    public QuantityUnitAttribute(string name, string unit, double scale, UnitPrefix prefix = UnitPrefix.None, int powerOfPrefix = 1)
    {
        Name = name;
        Unit = unit;
        Scale = scale;
        Prefix = prefix;
        PowerOfPrefix = powerOfPrefix;
    }
}

    
[AttributeUsage(AttributeTargets.Struct, AllowMultiple = true)]
internal sealed class QuantityOperationAttribute : Attribute
{
    public Type MultiplicantType { get; }
    public Type MultiplierType { get; }
    public Type ProductType { get; }

    public QuantityOperationAttribute(Type multiplicant, Type multiplier, Type product)
    {
        MultiplicantType = multiplicant;
        MultiplierType = multiplier;
        ProductType = product;
    }
}


[Flags]
internal enum UnitPrefix
{
    None = 0,
    
    Centi  = 1 << 0,
    Milli  = 1 << 1,
    Micro  = 1 << 2,
    Nano   = 1 << 3,
    Pico   = 1 << 4,
    Femto  = 1 << 5,
    Atto   = 1 << 6,
    Zepto  = 1 << 7,
    Yocto  = 1 << 8,
    Ronto  = 1 << 9,
    Quecto = 1 << 10,

    Hecto  = 1 << (0 + 16),
    Kilo   = 1 << (1 + 16),
    Mega   = 1 << (2 + 16),
    Giga   = 1 << (3 + 16),
    Tera   = 1 << (4 + 16),
    Peta   = 1 << (5 + 16),
    Exa    = 1 << (6 + 16),
    Zetta  = 1 << (7 + 16),
    Yotta  = 1 << (8 + 16),
    Ronna  = 1 << (9 + 16),
    Quetta = 1 << (10 + 16),
}